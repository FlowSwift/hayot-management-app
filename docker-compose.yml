services:
  inventory-database:
    image: postgres-db
    container_name: inventory-database
    volumes:
      - products-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: products
    networks:
      hayot-management:
        aliases:
          - products-db
    build: 
      context: ./inventory-database
      dockerfile: Dockerfile

  inventory-manager:
    image: inventory-manager
    container_name: inventory-manager
    build: 
      context: ./inventory-manager
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    volumes:
      - ./inventory-manager/:/app
    environment:
      POSTGRES_HOST: products-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: products
      POSTGRES_PORT: 5432
    networks:
      hayot-management:
        aliases:
          - inventory-manager-api
    command: npm run dev
#    command: tail -f #debugging option to keep container running

  client:
    image: client
    container_name: client
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./client/:/app
    networks:
      hayot-management:
    command: npm run start
#    command: tail -f #debugging option to keep container running

networks:
  hayot-management:
    name: hayot-management



volumes:
  products-db: